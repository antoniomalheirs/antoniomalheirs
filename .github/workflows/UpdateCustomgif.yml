name: Generate Stats and Render GIFs

on:
  push:
    branches: [main]
  schedule:
    - cron: "0 12 * * *"
  workflow_dispatch:

permissions:
  # PermissÃ£o para o workflow commitar os arquivos gerados
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  render:
    name: Generate Data and Render Video
    runs-on: ubuntu-latest
    steps:
      # Passo 1: Faz o checkout do SEU repositÃ³rio (que contÃ©m o projeto Remotion)
      - name: Checkout Repo
        uses: actions/checkout@v4

      # ðŸ‘‡ PASSO NOVO: Executa a action externa para gerar o 'stats.json'
      - name: Generate Stats File
        uses: LukeHagar/stats-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      # Passo 3: Configura o ambiente Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn' # REMOVA ESTA LINHA

      # (Opcional) O FFmpeg jÃ¡ vem instalado no ubuntu-latest, mas manter nÃ£o prejudica
      - name: Install FFmpeg (if needed)
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      # Passo 5: Instala as dependÃªncias do seu projeto com Yarn
      - name: Install Dependencies
        uses: borales/actions-yarn@v5
        with:
          cmd: install # Executa 'yarn install'
          # ðŸ‘‡ Adicionado para prevenir o mesmo erro de conflito que vimos com o npm
          args: --legacy-peer-deps

      # Passo 6: Renderiza o vÃ­deo usando o script 'render' do seu package.json
      - name: Render Video
        uses: borales/actions-yarn@v5
        with:
          cmd: render # Executa 'yarn render'
