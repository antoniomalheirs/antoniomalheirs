name: Generate Stats and Render GIFs

on:
  schedule:
    - cron: "0 12 * * *"
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  render:
    name: Generate Data and Render Video
    runs-on: ubuntu-latest
    steps:
      # Passo 1: Faz o checkout do SEU repositÃ³rio (que contÃ©m o projeto Remotion)
      - name: Checkout Repo
        uses: actions/checkout@v4

      # Passo 2: Configura o ambiente Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      # Passo 3: Cria o arquivo input.json que o Remotion espera
      - name: Create Input File for Remotion
        run: |
          echo '{"usernames": ["${{ github.repository_owner }}"]}' > input.json

      # Passo 4: Instala as dependÃªncias
      - name: Install Dependencies
        run: yarn install --legacy-peer-deps

      # Passo 5: Renderiza todos os GIFs
      - name: Render All GIFs
        run: |
          # Renderiza cada GIF individualmente, passando o input.json
          npx remotion render src/index.ts stats out/stats.gif --props ./input.json
          npx remotion render src/index.ts languages out/languages.gif --props ./input.json
          npx remotion render src/index.ts readme out/readme.gif --props ./input.json
          npx remotion render src/index.ts main-stats out/main-stats.gif --props ./input.json
          npx remotion render src/index.ts issue-tracking out/issue-tracking.gif --props ./input.json
          npx remotion render src/index.ts code-metrics out/code-metrics.gif --props ./input.json
          npx remotion render src/index.ts activity-overview out/activity-overview.gif --props ./input.json
          npx remotion render src/index.ts commit-streak out/commit-streak.gif --props ./input.json
          npx remotion render src/index.ts top-languages out/top-languages.gif --props ./input.json

          # Copia todos os GIFs gerados para a pasta public
          mkdir -p ./public
          cp out/*.gif ./public/

      # Passo 6: Faz o commit de todos os arquivos gerados
      - name: Auto commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ðŸ“Š Update stats and rendered GIFs"
